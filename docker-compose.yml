version: '3.8'

services:
  db:
    image: postgres:14.5
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  cache:
    image: redis:7.0.4
    restart: always
    volumes:
      - ./data/cache:/data

  web:
    build: .
    command: ["./wait-for-it.sh", "db:5432", "--",
              "gunicorn", "--bind", "0.0.0.0:8000", 
              "dev.wsgi:application"]
    restart: always
    volumes:
      - .:/app
      - ./staticfiles:/app/staticfiles
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=dev.settings.prod
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - db
      - cache

  celery:
    build: .
    command: ["celery", "-A", "dev", "worker", "--loglevel=info"]
    restart: always
    volumes: 
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=dev.settings.prod
    depends_on:
      - db
      - cache

  celery-beat:
    build: .
    command: ["celery", "-A", "dev", "beat", "--loglevel=info"]
    restart: always
    volumes: 
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=dev.settings.prod
    depends_on:
      - db
      - cache

  flower:
    build: .
    command: ["celery", "-A", "dev", "flower", "--port=5555"]
    restart: always
    ports:
      - "5555:5555"
    environment:
      - DJANGO_SETTINGS_MODULE=dev.settings.prod
    depends_on:
      - db
      - cache
  
    